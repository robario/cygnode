'use strict';
// core
const childProcess = require('child_process');
const path = require('path');

let statSync = null;

function symlink(from, to, type, callback) {
    to = path.resolve(to);
    from = path.resolve(path.dirname(to), from);
    const mode = statSync(from).isDirectory() ? '/J' : '/H';
    if ((type === 'dir' && mode !== '/J') ||
        (type === 'file' && mode !== '/H') ||
        (type === 'junction' && mode !== '/J')) {
        console.warn(`mismatch type between specified "${type}" and "${mode}"`);
    }
    let exec = childProcess.execFileSync;
    const args = [process.env.COMSPEC, ['/C', 'mklink', mode, to, from]];
    if (callback) {
        exec = childProcess.execFile;
        args.push(callback);
    }
    return exec.apply(childProcess, args);
}

module.exports = function (ref) {
    try {
        ref.symlinkSync('', '', 'dir');
    } catch (e) {
        if (e.code !== 'EPERM') {
            return;
        }
    }

    statSync = ref.statSync.bind(ref);

    ref.symlink = function (from, to, type, callback) {
        if (!callback) {
            callback = type;
            type = '';
        }
        return symlink(from, to, type, callback);
    };
    ref.symlinkSync = function (from, to, type) {
        return symlink(from, to, type);
    };
};
